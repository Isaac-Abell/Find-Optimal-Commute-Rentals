name: Deploy Lambda Listings Updater

on:
  push:
    branches:
      - main
    paths:
      - 'lambda/config.py'
      - 'lambda/db.py'
      - 'lambda/rental_listings_updater.py'
      - '.github/workflows/deploy_lambda_update.yml'

jobs:
  deploy:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # --- Publish Layer 1 (Core) ---
      - name: Publish Layer 1 (Core)
        id: publish_layer1
        run: |
          rm -rf lambda_layer1
          mkdir -p lambda_layer1/python/lib/python3.13/site-packages
          pip install --target=lambda_layer1/python/lib/python3.13/site-packages pandas numpy
          cd lambda_layer1
          zip -r ../lambda_layer1.zip .
          cd ..
          LAYER1_ARN=$(aws lambda publish-layer-version \
            --layer-name rental-listings-updater-dependencies-core \
            --zip-file fileb://lambda_layer1.zip \
            --compatible-runtimes python3.13 \
            --query LayerVersionArn \
            --output text)
          echo "LAYER1_ARN=$LAYER1_ARN" >> $GITHUB_ENV

      # --- Publish Layer 2 (Aux) ---
      - name: Publish Layer 2 (Aux)
        id: publish_layer2
        run: |
          rm -rf lambda_layer2
          mkdir -p lambda_layer2/python/lib/python3.13/site-packages
          pip install --target=lambda_layer2/python/lib/python3.13/site-packages sqlalchemy psycopg2-binary geopy googlemaps
          cd lambda_layer2
          zip -r ../lambda_layer2.zip .
          cd ..
          LAYER2_ARN=$(aws lambda publish-layer-version \
            --layer-name rental-listings-updater-dependencies-aux \
            --zip-file fileb://lambda_layer2.zip \
            --compatible-runtimes python3.13 \
            --query LayerVersionArn \
            --output text)
          echo "LAYER2_ARN=$LAYER2_ARN" >> $GITHUB_ENV

      # --- Package Lambda function ---
      - name: Package Lambda function
        run: |
          rm -f lambda_function.zip
          mkdir -p lambda_package
          cp -r lambda/config.py lambda_package/
          cp -r lambda/rental_listings_updater.py lambda_package/
          cp -r lambda/db.py lambda_package/
          cd lambda_package
          zip -r ../lambda_function.zip . -x "*__pycache__*"

      # --- Deploy Lambda safely ---
      - name: Deploy Lambda function with layers
        run: |
          FUNCTION_NAME="rental-listings-updater"

          # Update code
          aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file fileb://lambda_function.zip \
            --publish

          # Wait until Lambda is fully updated
          aws lambda wait function-updated --function-name "$FUNCTION_NAME"

          # Update configuration/layers
          aws lambda update-function-configuration \
            --function-name "$FUNCTION_NAME" \
            --layers $LAYER1_ARN $LAYER2_ARN

          # Wait again to ensure Lambda is fully active
          aws lambda wait function-updated --function-name "$FUNCTION_NAME"