name: Deploy Rental Listings Updater to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'update_db/**'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: rental-listings-updater
  LAMBDA_FUNCTION_NAME: rental-listings-updater-docker
  S3_BUCKET_NAME: commute-rental-listings
  SECRETS_MANAGER_NAME: commute-secrets

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up ECR URI
        id: set-ecr-uri
        run: |
          ECR_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ env.ECR_URI }}:${{ env.IMAGE_TAG }} -f update_db/Dockerfile .
          docker push ${{ env.ECR_URI }}:${{ env.IMAGE_TAG }}

      - name: Retrieve Secrets and Update Lambda Environment
        run: |
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id ${{ env.SECRETS_MANAGER_NAME }} \
            --query SecretString \
            --output text)

          ENV_VARS=$(echo "$SECRET_JSON" | jq -c '{"Variables": .}')

          aws lambda update-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --environment "$ENV_VARS" \
            --region ${{ env.AWS_REGION }}
      - name: Wait for Lambda configuration update
        run: |
          echo "Waiting for Lambda configuration update to complete..."
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --region ${{ env.AWS_REGION }}

      - name: Update AWS Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ env.ECR_URI }}:${{ env.IMAGE_TAG }} \
            --region ${{ env.AWS_REGION }}